{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hndls\\\\matic-nft-tutorial\\\\packages\\\\react-app\\\\src\\\\App.jsx\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useBalance, useContractLoader, useContractReader, useEventListener, useExchangePrice, useGasPrice, useOnBlock, useUserSigner } from \"./hooks\";\n\nconst {\n  BufferList\n} = require(\"bl\"); // https://www.npmjs.com/package/ipfs-http-client\n\n\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\"\n});\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\r\n    Welcome to üèó scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/austintgriffith/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    üåè EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS.mumbai; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // EXAMPLE STARTING JSON:\n\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\",\n  // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [{\n    trait_type: \"BackgroundColor\",\n    value: \"green\"\n  }, {\n    trait_type: \"Eyes\",\n    value: \"googly\"\n  }]\n}; // helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\n\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n\n    console.log(content);\n    return content;\n  }\n}; // üõ∞ providers\n\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null; // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userSigner = useUserSigner(injectedProvider, localProvider);\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, {\n    chainId: localChainId\n  }); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  console.log(\"ü§ó balance:\", balance); // üìü Listen for broadcast events\n\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"üìü Transfer events:\", transferEvents); //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const collectibleUpdate = [];\n\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({\n              id: tokenId,\n              uri: tokenURI,\n              owner: address,\n              ...jsonManifest\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      setYourCollectibles(collectibleUpdate);\n    };\n\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n  /*\r\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\r\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\r\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        message: \"\\u26A0\\uFE0F Wrong Network ID\",\n        description: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }\n        }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 26\n          }\n        }, \"chain id 1337\"), \" for localhost and you need to change it to \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 90\n          }\n        }, \"31337\"), \" to work with HardHat.\", /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }\n        }, \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\")),\n        type: \"error\",\n        closable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        message: \"\\u26A0\\uFE0F Wrong Network\",\n        description: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }\n        }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 26\n          }\n        }, networkSelected && networkSelected.name), \" selected and you need to be on\", \" \", /*#__PURE__*/React.createElement(Button, {\n          onClick: async () => {\n            const ethereum = window.ethereum;\n            const data = [{\n              chainId: \"0x\" + targetNetwork.chainId.toString(16),\n              chainName: targetNetwork.name,\n              nativeCurrency: targetNetwork.nativeCurrency,\n              rpcUrls: [targetNetwork.rpcUrl],\n              blockExplorerUrls: [targetNetwork.blockExplorer]\n            }];\n            console.log(\"data\", data);\n            const tx = await ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: data\n            }).catch();\n\n            if (tx) {\n              console.log(tx);\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }\n        }, networkLocal && networkLocal.name)), \".\"),\n        type: \"error\",\n        closable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }\n      }));\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }\n    }, targetNetwork.name);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => {\n        faucetTx({\n          to: address,\n          value: ethers.utils.parseEther(\"0.01\")\n        });\n        setFaucetClicked(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"));\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }), networkDisplay, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }, \"YourCollectibles\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/transfers\");\n    },\n    to: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, \"Transfers\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/ipfsup\");\n    },\n    to: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, \"IPFS Upload\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/ipfsdown\");\n    },\n    to: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }, \"IPFS Download\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/debugcontracts\");\n    },\n    to: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, \"Debug Contracts\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: yourCollectibles,\n    renderItem: item => {\n      const id = item.id.toNumber();\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id + \"_\" + item.uri + \"_\" + item.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }\n        }, \"#\", id), \" \", item.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.image,\n        style: {\n          maxWidth: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 23\n        }\n      }, \"owner:\", \" \", /*#__PURE__*/React.createElement(Address, {\n        address: item.owner,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: mainnetProvider,\n        placeholder: \"transfer to address\",\n        value: transferToAddresses[id],\n        onChange: newValue => {\n          const update = {};\n          update[id] = newValue;\n          setTransferToAddresses({ ...transferToAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 25\n        }\n      }, \"Transfer\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: transferEvents,\n    renderItem: item => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 16,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 23\n        }\n      }, \"#\", item[2].toNumber()), /*#__PURE__*/React.createElement(Address, {\n        address: item[0],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 23\n        }\n      }), \" =>\", /*#__PURE__*/React.createElement(Address, {\n        address: item[1],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactJson, {\n    style: {\n      padding: 8\n    },\n    src: yourJSON,\n    theme: \"pop\",\n    enableClipboard: false,\n    onEdit: (edit, a) => {\n      setYourJSON(edit.updated_src);\n    },\n    onAdd: (add, a) => {\n      setYourJSON(add.updated_src);\n    },\n    onDelete: (del, a) => {\n      setYourJSON(del.updated_src);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      console.log(\"UPLOADING...\", yourJSON);\n      setSending(true);\n      setIpfsHash();\n      const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.path) {\n        setIpfsHash(result.path);\n      }\n\n      setSending(false);\n      console.log(\"RESULT:\", result);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 13\n    }\n  }, \"Upload to IPFS\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 16,\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 13\n    }\n  }, ipfsHash)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: ipfsDownHash,\n    placeHolder: \"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\",\n    onChange: e => {\n      setIpfsDownHash(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      console.log(\"DOWNLOADING...\", ipfsDownHash);\n      setDownloading(true);\n      setIpfsContent();\n      const result = await getFromIPFS(ipfsDownHash); // addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.toString) {\n        setIpfsContent(result.toString());\n      }\n\n      setDownloading(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 13\n    }\n  }, \"Download from IPFS\"), /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      padding: 16,\n      width: 500,\n      margin: \"auto\",\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }\n  }, ipfsContent)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"YourCollectible\",\n    signer: userSigner,\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(ThemeSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userSigner: userSigner,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 9\n    }\n  }), faucetHint), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    networks: NETWORKS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Support\"))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 11\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  faucetAvailable ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 17\n    }\n  }) : \"\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hndls/matic-nft-tutorial/packages/react-app/src/App.jsx"],"names":["WalletConnectProvider","Alert","Button","Card","Col","Input","List","Menu","Row","React","useCallback","useEffect","useState","ReactJson","BrowserRouter","Link","Route","Switch","Web3Modal","Account","Address","AddressInput","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","useBalance","useContractLoader","useContractReader","useEventListener","useExchangePrice","useGasPrice","useOnBlock","useUserSigner","BufferList","require","ipfsAPI","ipfs","host","port","protocol","ethers","targetNetwork","mumbai","DEBUG","NETWORKCHECK","STARTING_JSON","description","external_url","image","name","attributes","trait_type","value","getFromIPFS","hashToGet","file","get","console","log","path","content","chunk","append","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","web3Modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","logoutOfWeb3Modal","clearCachedProvider","setTimeout","window","location","reload","App","props","mainnetProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","price","gasPrice","userSigner","getAddress","newAddress","localChainId","chainId","selectedChainId","provider","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","balance","transferEvents","yourBalance","toNumber","yourCollectibles","setYourCollectibles","updateYourCollectibles","collectibleUpdate","tokenIndex","tokenId","YourCollectible","tokenOfOwnerByIndex","tokenURI","ipfsHash","replace","jsonManifestBuffer","jsonManifest","JSON","parse","toString","push","id","uri","owner","e","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","params","catch","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","parseEther","yourJSON","setYourJSON","sending","setSending","setIpfsHash","ipfsDownHash","setIpfsDownHash","downloading","setDownloading","ipfsContent","setIpfsContent","transferToAddresses","setTransferToAddresses","textAlign","width","margin","marginTop","paddingBottom","item","fontSize","marginRight","maxWidth","newValue","update","transferFrom","blockNumber","paddingTop","edit","a","updated_src","add","del","result","stringify","target","left","bottom","opacity","open"],"mappings":"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","sourcesContent":["import WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport ReactJson from \"react-json-view\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport Web3Modal from \"web3modal\";\r\nimport \"./App.css\";\r\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\r\nimport {INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\r\nimport { Transactor } from \"./helpers\";\r\nimport {\r\n  useBalance,\r\n  useContractLoader,\r\n  useContractReader,\r\n  useEventListener,\r\n  useExchangePrice,\r\n  useGasPrice,\r\n  useOnBlock,\r\n  useUserSigner,\r\n} from \"./hooks\";\r\n\r\nconst { BufferList } = require(\"bl\");\r\n// https://www.npmjs.com/package/ipfs-http-client\r\nconst ipfsAPI = require(\"ipfs-http-client\");\r\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\r\n\r\nconst { ethers } = require(\"ethers\");\r\n\r\n/*\r\n    Welcome to üèó scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/austintgriffith/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    üåè EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\r\n\r\n/// üì° What chain are your contracts deployed to?\r\nconst targetNetwork = NETWORKS.mumbai; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\r\n\r\n// üò¨ Sorry for all the console logging\r\nconst DEBUG = true;\r\nconst NETWORKCHECK = true;\r\n\r\n// EXAMPLE STARTING JSON:\r\nconst STARTING_JSON = {\r\n  description: \"It's actually a bison?\",\r\n  external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\r\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\r\n  name: \"Buffalo\",\r\n  attributes: [\r\n    {\r\n      trait_type: \"BackgroundColor\",\r\n      value: \"green\",\r\n    },\r\n    {\r\n      trait_type: \"Eyes\",\r\n      value: \"googly\",\r\n    },\r\n  ],\r\n};\r\n\r\n// helper function to \"Get\" from IPFS\r\n// you usually go content.toString() after this...\r\nconst getFromIPFS = async hashToGet => {\r\n  for await (const file of ipfs.get(hashToGet)) {\r\n    console.log(file.path);\r\n    if (!file.content) continue;\r\n    const content = new BufferList();\r\n    for await (const chunk of file.content) {\r\n      content.append(chunk);\r\n    }\r\n    console.log(content);\r\n    return content;\r\n  }\r\n};\r\n\r\n// üõ∞ providers\r\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\r\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\r\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\r\n//\r\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\r\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\r\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\r\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null;\r\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\r\n\r\n// üè† Your local provider is usually pointed at your local blockchain\r\nconst localProviderUrl = targetNetwork.rpcUrl;\r\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\r\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\r\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\r\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\r\n\r\n// üî≠ block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        infuraId: INFURA_ID,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst logoutOfWeb3Modal = async () => {\r\n  await web3Modal.clearCachedProvider();\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n};\r\n\r\nfunction App(props) {\r\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\r\n\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  const [address, setAddress] = useState();\r\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\r\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\r\n\r\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\r\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\r\n  const userSigner = useUserSigner(injectedProvider, localProvider);\r\n\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (userSigner) {\r\n        const newAddress = await userSigner.getAddress();\r\n        setAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [userSigner]);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\r\n  const selectedChainId =\r\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\r\n\r\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userSigner, gasPrice);\r\n\r\n  // Faucet Tx can be used to send funds from the faucet\r\n  const faucetTx = Transactor(localProvider, gasPrice);\r\n\r\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different üõ∞ providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  // Load in your local üìù contract and read a value from it:\r\n  const readContracts = useContractLoader(localProvider);\r\n\r\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\r\n  const writeContracts = useContractLoader(userSigner, { chainId: localChainId });\r\n\r\n  // EXTERNAL CONTRACT EXAMPLE:\r\n  //\r\n  // If you want to bring in the mainnet DAI contract it would look like:\r\n  const mainnetContracts = useContractLoader(mainnetProvider);\r\n\r\n  // If you want to call a function on a new block\r\n  useOnBlock(mainnetProvider, () => {\r\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\r\n  });\r\n\r\n  // Then read your DAI balance like:\r\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\r\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\r\n  ]);\r\n\r\n  // keep track of a variable from the contract in the local React state:\r\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\r\n  console.log(\"ü§ó balance:\", balance);\r\n\r\n  // üìü Listen for broadcast events\r\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\r\n  console.log(\"üìü Transfer events:\", transferEvents);\r\n\r\n  //\r\n  // üß† This effect will update yourCollectibles by polling when your balance changes\r\n  //\r\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\r\n  const [yourCollectibles, setYourCollectibles] = useState();\r\n\r\n  useEffect(() => {\r\n    const updateYourCollectibles = async () => {\r\n      const collectibleUpdate = [];\r\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\r\n        try {\r\n          console.log(\"GEtting token index\", tokenIndex);\r\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\r\n          console.log(\"tokenId\", tokenId);\r\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\r\n          console.log(\"tokenURI\", tokenURI);\r\n\r\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\r\n          console.log(\"ipfsHash\", ipfsHash);\r\n\r\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\r\n\r\n          try {\r\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\r\n            console.log(\"jsonManifest\", jsonManifest);\r\n            collectibleUpdate.push({ id: tokenId, uri: tokenURI, owner: address, ...jsonManifest });\r\n          } catch (e) {\r\n            console.log(e);\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n      setYourCollectibles(collectibleUpdate);\r\n    };\r\n    updateYourCollectibles();\r\n  }, [address, yourBalance]);\r\n\r\n  /*\r\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\r\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\r\n  */\r\n\r\n  //\r\n  // üß´ DEBUG üë®üèª‚Äçüî¨\r\n  //\r\n  useEffect(() => {\r\n    if (\r\n      DEBUG &&\r\n      mainnetProvider &&\r\n      address &&\r\n      selectedChainId &&\r\n      yourLocalBalance &&\r\n      yourMainnetBalance &&\r\n      readContracts &&\r\n      writeContracts &&\r\n      mainnetContracts\r\n    ) {\r\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\r\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\r\n      console.log(\"üè† localChainId\", localChainId);\r\n      console.log(\"üë©‚Äçüíº selected address:\", address);\r\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\r\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\r\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\r\n      console.log(\"üìù readContracts\", readContracts);\r\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\r\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\r\n      console.log(\"üîê writeContracts\", writeContracts);\r\n    }\r\n  }, [\r\n    mainnetProvider,\r\n    address,\r\n    selectedChainId,\r\n    yourLocalBalance,\r\n    yourMainnetBalance,\r\n    readContracts,\r\n    writeContracts,\r\n    mainnetContracts,\r\n  ]);\r\n\r\n  let networkDisplay = \"\";\r\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\r\n    const networkSelected = NETWORK(selectedChainId);\r\n    const networkLocal = NETWORK(localChainId);\r\n    if (selectedChainId === 1337 && localChainId === 31337) {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"‚ö†Ô∏è Wrong Network ID\"\r\n            description={\r\n              <div>\r\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\r\n                HardHat.\r\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"‚ö†Ô∏è Wrong Network\"\r\n            description={\r\n              <div>\r\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\r\n                <Button\r\n                  onClick={async () => {\r\n                    const ethereum = window.ethereum;\r\n                    const data = [\r\n                      {\r\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\r\n                        chainName: targetNetwork.name,\r\n                        nativeCurrency: targetNetwork.nativeCurrency,\r\n                        rpcUrls: [targetNetwork.rpcUrl],\r\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\r\n                      },\r\n                    ];\r\n                    console.log(\"data\", data);\r\n                    const tx = await ethereum.request({ method: \"wallet_addEthereumChain\", params: data }).catch();\r\n                    if (tx) {\r\n                      console.log(tx);\r\n                    }\r\n                  }}\r\n                >\r\n                  <b>{networkLocal && networkLocal.name}</b>\r\n                </Button>.\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n\r\n    provider.on(\"chainChanged\", chainId => {\r\n      console.log(`chain changed to ${chainId}! updating providers`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    provider.on(\"accountsChanged\", () => {\r\n      console.log(`account changed!`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    // Subscribe to session disconnection\r\n    provider.on(\"disconnect\", (code, reason) => {\r\n      console.log(code, reason);\r\n      logoutOfWeb3Modal();\r\n    });\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = \"\";\r\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\r\n\r\n  const [faucetClicked, setFaucetClicked] = useState(false);\r\n  if (\r\n    !faucetClicked &&\r\n    localProvider &&\r\n    localProvider._network &&\r\n    localProvider._network.chainId == 31337 &&\r\n    yourLocalBalance &&\r\n    ethers.utils.formatEther(yourLocalBalance) <= 0\r\n  ) {\r\n    faucetHint = (\r\n      <div style={{ padding: 16 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            faucetTx({\r\n              to: address,\r\n              value: ethers.utils.parseEther(\"0.01\"),\r\n            });\r\n            setFaucetClicked(true);\r\n          }}\r\n        >\r\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\r\n  const [sending, setSending] = useState();\r\n  const [ipfsHash, setIpfsHash] = useState();\r\n  const [ipfsDownHash, setIpfsDownHash] = useState();\r\n\r\n  const [downloading, setDownloading] = useState();\r\n  const [ipfsContent, setIpfsContent] = useState();\r\n\r\n  const [transferToAddresses, setTransferToAddresses] = useState({});\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\r\n      <Header />\r\n      {networkDisplay}\r\n      <BrowserRouter>\r\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/\");\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              YourCollectibles\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/transfers\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/transfers\");\r\n              }}\r\n              to=\"/transfers\"\r\n            >\r\n              Transfers\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/ipfsup\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/ipfsup\");\r\n              }}\r\n              to=\"/ipfsup\"\r\n            >\r\n              IPFS Upload\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/ipfsdown\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/ipfsdown\");\r\n              }}\r\n              to=\"/ipfsdown\"\r\n            >\r\n              IPFS Download\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/debugcontracts\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/debugcontracts\");\r\n              }}\r\n              to=\"/debugcontracts\"\r\n            >\r\n              Debug Contracts\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/*\r\n                üéõ this scaffolding is full of commonly used components\r\n                this <Contract/> component will automatically parse your ABI\r\n                and give you a form to interact with it locally\r\n            */}\r\n            <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\r\n              <List\r\n                bordered\r\n                dataSource={yourCollectibles}\r\n                renderItem={item => {\r\n                  const id = item.id.toNumber();\r\n                  return (\r\n                    <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\r\n                      <Card\r\n                        title={\r\n                          <div>\r\n                            <span style={{ fontSize: 16, marginRight: 8 }}>#{id}</span> {item.name}\r\n                          </div>\r\n                        }\r\n                      >\r\n                        <div>\r\n                          <img src={item.image} style={{ maxWidth: 150 }} />\r\n                        </div>\r\n                        <div>{item.description}</div>\r\n                      </Card>\r\n\r\n                      <div>\r\n                        owner:{\" \"}\r\n                        <Address\r\n                          address={item.owner}\r\n                          ensProvider={mainnetProvider}\r\n                          blockExplorer={blockExplorer}\r\n                          fontSize={16}\r\n                        />\r\n                        <AddressInput\r\n                          ensProvider={mainnetProvider}\r\n                          placeholder=\"transfer to address\"\r\n                          value={transferToAddresses[id]}\r\n                          onChange={newValue => {\r\n                            const update = {};\r\n                            update[id] = newValue;\r\n                            setTransferToAddresses({ ...transferToAddresses, ...update });\r\n                          }}\r\n                        />\r\n                        <Button\r\n                          onClick={() => {\r\n                            console.log(\"writeContracts\", writeContracts);\r\n                            tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\r\n                          }}\r\n                        >\r\n                          Transfer\r\n                        </Button>\r\n                      </div>\r\n                    </List.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/transfers\">\r\n            <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\r\n              <List\r\n                bordered\r\n                dataSource={transferEvents}\r\n                renderItem={item => {\r\n                  return (\r\n                    <List.Item key={item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber()}>\r\n                      <span style={{ fontSize: 16, marginRight: 8 }}>#{item[2].toNumber()}</span>\r\n                      <Address address={item[0]} ensProvider={mainnetProvider} fontSize={16} /> =&gt;\r\n                      <Address address={item[1]} ensProvider={mainnetProvider} fontSize={16} />\r\n                    </List.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/ipfsup\">\r\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\", textAlign: \"left\" }}>\r\n              <ReactJson\r\n                style={{ padding: 8 }}\r\n                src={yourJSON}\r\n                theme=\"pop\"\r\n                enableClipboard={false}\r\n                onEdit={(edit, a) => {\r\n                  setYourJSON(edit.updated_src);\r\n                }}\r\n                onAdd={(add, a) => {\r\n                  setYourJSON(add.updated_src);\r\n                }}\r\n                onDelete={(del, a) => {\r\n                  setYourJSON(del.updated_src);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              style={{ margin: 8 }}\r\n              loading={sending}\r\n              size=\"large\"\r\n              shape=\"round\"\r\n              type=\"primary\"\r\n              onClick={async () => {\r\n                console.log(\"UPLOADING...\", yourJSON);\r\n                setSending(true);\r\n                setIpfsHash();\r\n                const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\r\n                if (result && result.path) {\r\n                  setIpfsHash(result.path);\r\n                }\r\n                setSending(false);\r\n                console.log(\"RESULT:\", result);\r\n              }}\r\n            >\r\n              Upload to IPFS\r\n            </Button>\r\n\r\n            <div style={{ padding: 16, paddingBottom: 150 }}>{ipfsHash}</div>\r\n          </Route>\r\n          <Route path=\"/ipfsdown\">\r\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\r\n              <Input\r\n                value={ipfsDownHash}\r\n                placeHolder=\"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\"\r\n                onChange={e => {\r\n                  setIpfsDownHash(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <Button\r\n              style={{ margin: 8 }}\r\n              loading={sending}\r\n              size=\"large\"\r\n              shape=\"round\"\r\n              type=\"primary\"\r\n              onClick={async () => {\r\n                console.log(\"DOWNLOADING...\", ipfsDownHash);\r\n                setDownloading(true);\r\n                setIpfsContent();\r\n                const result = await getFromIPFS(ipfsDownHash); // addToIPFS(JSON.stringify(yourJSON))\r\n                if (result && result.toString) {\r\n                  setIpfsContent(result.toString());\r\n                }\r\n                setDownloading(false);\r\n              }}\r\n            >\r\n              Download from IPFS\r\n            </Button>\r\n\r\n            <pre style={{ padding: 16, width: 500, margin: \"auto\", paddingBottom: 150 }}>{ipfsContent}</pre>\r\n          </Route>\r\n          <Route path=\"/debugcontracts\">\r\n            <Contract\r\n              name=\"YourCollectible\"\r\n              signer={userSigner}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      <ThemeSwitch />\r\n\r\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\r\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n        <Account\r\n          address={address}\r\n          localProvider={localProvider}\r\n          userSigner={userSigner}\r\n          mainnetProvider={mainnetProvider}\r\n          price={price}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n          blockExplorer={blockExplorer}\r\n        />\r\n        {faucetHint}\r\n      </div>\r\n\r\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\r\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={8}>\r\n            <Ramp price={price} address={address} networks={NETWORKS} />\r\n          </Col>\r\n\r\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\r\n            <GasGauge gasPrice={gasPrice} />\r\n          </Col>\r\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\r\n            <Button\r\n              onClick={() => {\r\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\r\n              }}\r\n              size=\"large\"\r\n              shape=\"round\"\r\n            >\r\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\r\n                üí¨\r\n              </span>\r\n              Support\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={24}>\r\n            {\r\n              /*  if the local provider has a signer, let's show the faucet:  */\r\n              faucetAvailable ? (\r\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
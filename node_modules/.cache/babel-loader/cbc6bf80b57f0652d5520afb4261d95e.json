{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hndls\\\\matic-nft-tutorial\\\\packages\\\\react-app\\\\src\\\\components\\\\Address.jsx\";\nimport { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"../hooks\"; // changed value={address} to address={address}\n\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\n\nconst {\n  Text\n} = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n  const ens = useLookupAddress(props.ensProvider, address);\n  const {\n    currentTheme\n  } = useThemeSwitcher();\n\n  if (!address) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      paragraph: {\n        rows: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n\n  if (props.minimized) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        verticalAlign: \"middle\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\"\n      },\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Blockies, {\n      seed: address.toLowerCase(),\n      size: 8,\n      scale: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  let text;\n\n  if (props.onChange) {\n    text = /*#__PURE__*/React.createElement(Text, {\n      editable: {\n        onChange: props.onChange\n      },\n      copyable: {\n        text: address\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\"\n      },\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, displayAddress));\n  } else {\n    text = /*#__PURE__*/React.createElement(Text, {\n      copyable: {\n        text: address\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\"\n      },\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, displayAddress));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Blockies, {\n    seed: address.toLowerCase(),\n    size: 8,\n    scale: props.fontSize ? props.fontSize / 7 : 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      verticalAlign: \"middle\",\n      paddingLeft: 5,\n      fontSize: props.fontSize ? props.fontSize : 28\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, text));\n}","map":{"version":3,"sources":["C:/Users/hndls/matic-nft-tutorial/packages/react-app/src/components/Address.jsx"],"names":["Skeleton","Typography","React","Blockies","useThemeSwitcher","useLookupAddress","Text","blockExplorerLink","address","blockExplorer","Address","props","value","ens","ensProvider","currentTheme","rows","displayAddress","substr","indexOf","size","etherscanLink","minimized","verticalAlign","color","toLowerCase","text","onChange","fontSize","paddingLeft"],"mappings":"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","sourcesContent":["import { Skeleton, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { useLookupAddress } from \"../hooks\";\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) =>\r\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const { currentTheme } = useThemeSwitcher();\r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\") < 0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\r\n      </span>\r\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\r\n        {text}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\hndls\\\\matic-nft-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\hndls\\\\matic-nft-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\hndls\\\\matic-nft-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{KeyOutlined,QrcodeOutlined,SendOutlined,WalletOutlined}from\"@ant-design/icons\";import{Button,Modal,Spin,Tooltip,Typography}from\"antd\";import{ethers}from\"ethers\";import QR from\"qrcode.react\";import React,{useState,useEffect}from\"react\";import{Transactor}from\"../helpers\";import Address from\"./Address\";import AddressInput from\"./AddressInput\";import Balance from\"./Balance\";import EtherInput from\"./EtherInput\";var Text=Typography.Text,Paragraph=Typography.Paragraph;/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/export default function Wallet(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),signerAddress=_useState2[0],setSignerAddress=_useState2[1];useEffect(function(){function getAddress(){return _getAddress.apply(this,arguments);}function _getAddress(){_getAddress=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!props.signer){_context.next=5;break;}_context.next=3;return props.signer.getAddress();case 3:newAddress=_context.sent;setSignerAddress(newAddress);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getAddress.apply(this,arguments);}getAddress();},[props.signer]);var selectedAddress=props.address||signerAddress;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),qr=_useState6[0],setQr=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),amount=_useState8[0],setAmount=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),toAddress=_useState10[0],setToAddress=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),pk=_useState12[0],setPK=_useState12[1];var providerSend=props.signer?/*#__PURE__*/React.createElement(Tooltip,{title:\"Wallet\"},/*#__PURE__*/React.createElement(WalletOutlined,{onClick:function onClick(){setOpen(!open);},rotate:-90,style:{padding:7,color:props.color?props.color:\"\",cursor:\"pointer\",fontSize:28,verticalAlign:\"middle\"}})):\"\";var display;var receiveButton;var privateKeyButton;if(qr){display=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Text,{copyable:true},selectedAddress)),/*#__PURE__*/React.createElement(QR,{value:selectedAddress,size:\"450\",level:\"H\",includeMargin:true,renderAs:\"svg\",imageSettings:{excavate:false}}));receiveButton=/*#__PURE__*/React.createElement(Button,{key:\"hide\",onClick:function onClick(){setQr(\"\");}},/*#__PURE__*/React.createElement(QrcodeOutlined,null),\" Hide\");privateKeyButton=/*#__PURE__*/React.createElement(Button,{key:\"hide\",onClick:function onClick(){setPK(selectedAddress);setQr(\"\");}},/*#__PURE__*/React.createElement(KeyOutlined,null),\" Private Key\");}else if(pk){var _pk=localStorage.getItem(\"metaPrivateKey\");var wallet=new ethers.Wallet(_pk);if(wallet.address!==selectedAddress){display=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"b\",null,\"*injected account*, private key unknown\"));}else{var extraPkDisplayAdded={};var extraPkDisplay=[];extraPkDisplayAdded[wallet.address]=true;extraPkDisplay.push(/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}},/*#__PURE__*/React.createElement(\"a\",{href:\"/pk#\"+_pk},/*#__PURE__*/React.createElement(Address,{minimized:true,address:wallet.address,ensProvider:props.ensProvider}),\" \",wallet.address.substr(0,6))));for(var key in localStorage){if(key.indexOf(\"metaPrivateKey_backup\")>=0){console.log(key);var pastpk=localStorage.getItem(key);var pastwallet=new ethers.Wallet(pastpk);if(!extraPkDisplayAdded[pastwallet.address]/* && selectedAddress!=pastwallet.address */){extraPkDisplayAdded[pastwallet.address]=true;extraPkDisplay.push(/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:16}},/*#__PURE__*/React.createElement(\"a\",{href:\"/pk#\"+pastpk},/*#__PURE__*/React.createElement(Address,{minimized:true,address:pastwallet.address,ensProvider:props.ensProvider}),\" \",pastwallet.address.substr(0,6))));}}}display=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Private Key:\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Text,{copyable:true},_pk)),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"i\",null,\"Point your camera phone at qr code to open in\",/*#__PURE__*/React.createElement(\"a\",{target:\"_blank\",href:\"https://xdai.io/\"+_pk,rel:\"noopener noreferrer\"},\"burner wallet\"),\":\"),/*#__PURE__*/React.createElement(QR,{value:\"https://xdai.io/\"+_pk,size:\"450\",level:\"H\",includeMargin:true,renderAs:\"svg\",imageSettings:{excavate:false}}),/*#__PURE__*/React.createElement(Paragraph,{style:{fontSize:\"16\"},copyable:true},\"https://xdai.io/\"+_pk),extraPkDisplay?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Known Private Keys:\"),extraPkDisplay,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){var currentPrivateKey=window.localStorage.getItem(\"metaPrivateKey\");if(currentPrivateKey){window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);}var randomWallet=ethers.Wallet.createRandom();var privateKey=randomWallet._signingKey().privateKey;window.localStorage.setItem(\"metaPrivateKey\",privateKey);window.location.reload();}},\"Generate\")):\"\");}receiveButton=/*#__PURE__*/React.createElement(Button,{key:\"receive\",onClick:function onClick(){setQr(selectedAddress);setPK(\"\");}},/*#__PURE__*/React.createElement(QrcodeOutlined,null),\" Receive\");privateKeyButton=/*#__PURE__*/React.createElement(Button,{key:\"hide\",onClick:function onClick(){setPK(\"\");setQr(\"\");}},/*#__PURE__*/React.createElement(KeyOutlined,null),\" Hide\");}else{var inputStyle={padding:10};display=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:inputStyle},/*#__PURE__*/React.createElement(AddressInput,{autoFocus:true,ensProvider:props.ensProvider,placeholder:\"to address\",address:toAddress,onChange:setToAddress})),/*#__PURE__*/React.createElement(\"div\",{style:inputStyle},/*#__PURE__*/React.createElement(EtherInput,{price:props.price,value:amount,onChange:function onChange(value){setAmount(value);}})));receiveButton=/*#__PURE__*/React.createElement(Button,{key:\"receive\",onClick:function onClick(){setQr(selectedAddress);setPK(\"\");}},/*#__PURE__*/React.createElement(QrcodeOutlined,null),\" Receive\");privateKeyButton=/*#__PURE__*/React.createElement(Button,{key:\"hide\",onClick:function onClick(){setPK(selectedAddress);setQr(\"\");}},/*#__PURE__*/React.createElement(KeyOutlined,null),\" Private Key\");}return/*#__PURE__*/React.createElement(\"span\",null,providerSend,/*#__PURE__*/React.createElement(Modal,{visible:open,title:/*#__PURE__*/React.createElement(\"div\",null,selectedAddress?/*#__PURE__*/React.createElement(Address,{address:selectedAddress,ensProvider:props.ensProvider}):/*#__PURE__*/React.createElement(Spin,null),/*#__PURE__*/React.createElement(\"div\",{style:{float:\"right\",paddingRight:25}},/*#__PURE__*/React.createElement(Balance,{address:selectedAddress,provider:props.provider,dollarMultiplier:props.price}))),onOk:function onOk(){setQr();setPK();setOpen(!open);},onCancel:function onCancel(){setQr();setPK();setOpen(!open);},footer:[privateKeyButton,receiveButton,/*#__PURE__*/React.createElement(Button,{key:\"submit\",type:\"primary\",disabled:!amount||!toAddress||qr,loading:false,onClick:function onClick(){var tx=Transactor(props.signer);var value;try{value=ethers.utils.parseEther(\"\"+amount);}catch(e){// failed to parseEther, try something else\nvalue=ethers.utils.parseEther(\"\"+parseFloat(amount).toFixed(8));}tx({to:toAddress,value:value});setOpen(!open);setQr();}},/*#__PURE__*/React.createElement(SendOutlined,null),\" Send\")]},display));}","map":{"version":3,"sources":["C:/Users/hndls/matic-nft-tutorial/packages/react-app/src/components/Wallet.jsx"],"names":["KeyOutlined","QrcodeOutlined","SendOutlined","WalletOutlined","Button","Modal","Spin","Tooltip","Typography","ethers","QR","React","useState","useEffect","Transactor","Address","AddressInput","Balance","EtherInput","Text","Paragraph","Wallet","props","signerAddress","setSignerAddress","getAddress","signer","newAddress","selectedAddress","address","open","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","padding","color","cursor","fontSize","verticalAlign","display","receiveButton","privateKeyButton","excavate","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","ensProvider","substr","key","indexOf","console","log","pastpk","pastwallet","currentPrivateKey","window","setItem","Date","now","randomWallet","createRandom","privateKey","_signingKey","location","reload","inputStyle","price","value","float","paddingRight","provider","tx","utils","parseEther","e","parseFloat","toFixed","to"],"mappings":"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","sourcesContent":["import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\r\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\r\nimport { ethers } from \"ethers\";\r\nimport QR from \"qrcode.react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport Balance from \"./Balance\";\r\nimport EtherInput from \"./EtherInput\";\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const [signerAddress, setSignerAddress] = useState();\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (props.signer) {\r\n        const newAddress = await props.signer.getAddress();\r\n        setSignerAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [props.signer]);\r\n\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState();\r\n\r\n  const providerSend = props.signer ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton;\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  } else if (pk) {\r\n    const pk = localStorage.getItem(\"metaPrivateKey\");\r\n    const wallet = new ethers.Wallet(pk);\r\n\r\n    if (wallet.address !== selectedAddress) {\r\n      display = (\r\n        <div>\r\n          <b>*injected account*, private key unknown</b>\r\n        </div>\r\n      );\r\n    } else {\r\n      const extraPkDisplayAdded = {};\r\n      const extraPkDisplay = [];\r\n      extraPkDisplayAdded[wallet.address] = true;\r\n      extraPkDisplay.push(\r\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\r\n          <a href={\"/pk#\" + pk}>\r\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\r\n          </a>\r\n        </div>,\r\n      );\r\n      for (const key in localStorage) {\r\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\r\n          console.log(key);\r\n          const pastpk = localStorage.getItem(key);\r\n          const pastwallet = new ethers.Wallet(pastpk);\r\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\r\n            extraPkDisplayAdded[pastwallet.address] = true;\r\n            extraPkDisplay.push(\r\n              <div style={{ fontSize: 16 }}>\r\n                <a href={\"/pk#\" + pastpk}>\r\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\r\n                  {pastwallet.address.substr(0, 6)}\r\n                </a>\r\n              </div>,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      display = (\r\n        <div>\r\n          <b>Private Key:</b>\r\n\r\n          <div>\r\n            <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <i>\r\n            Point your camera phone at qr code to open in\r\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\r\n              burner wallet\r\n            </a>\r\n            :\r\n          </i>\r\n          <QR\r\n            value={\"https://xdai.io/\" + pk}\r\n            size=\"450\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n\r\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\r\n            {\"https://xdai.io/\" + pk}\r\n          </Paragraph>\r\n\r\n          {extraPkDisplay ? (\r\n            <div>\r\n              <h3>Known Private Keys:</h3>\r\n              {extraPkDisplay}\r\n              <Button\r\n                onClick={() => {\r\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n                  if (currentPrivateKey) {\r\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\r\n                  }\r\n                  const randomWallet = ethers.Wallet.createRandom();\r\n                  const privateKey = randomWallet._signingKey().privateKey;\r\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(\"\");\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Hide\r\n      </Button>\r\n    );\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton,\r\n          receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.signer);\r\n\r\n              let value;\r\n              try {\r\n                value = ethers.utils.parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
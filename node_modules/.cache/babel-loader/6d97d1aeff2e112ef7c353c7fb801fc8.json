{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\hndls\\\\matic-nft-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{DollarCircleOutlined}from\"@ant-design/icons\";import{RampInstantSDK}from\"@ramp-network/ramp-instant-sdk\";import{Button,Divider,Modal}from\"antd\";import React,{useState}from\"react\";// added display of 0 if price={price} is not provided\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays current ETH price and gives options to buy ETH through Wyre/Ramp/Coinbase\r\n                            or get through Rinkeby/Ropsten/Kovan/Goerli\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Ramp\r\n    price={price}\r\n    address={address}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Ramp opens directly in the application, component uses RampInstantSDK\r\n  - Provide price={price} and current ETH price will be displayed\r\n  - Provide address={address} and your address will be pasted into Wyre/Ramp instantly\r\n*/export default function Ramp(props){var _useState=useState(\"down\"),_useState2=_slicedToArray(_useState,2),modalUp=_useState2[0],setModalUp=_useState2[1];var type=\"default\";var allFaucets=[];var _loop=function _loop(n){if(props.networks[n].chainId!==31337&&props.networks[n].chainId!==1){allFaucets.push(/*#__PURE__*/React.createElement(\"p\",{key:props.networks[n].chainId},/*#__PURE__*/React.createElement(Button,{style:{color:props.networks[n].color},type:type,size:\"large\",shape:\"round\",onClick:function onClick(){window.open(props.networks[n].faucet);}},props.networks[n].name)));}};for(var n in props.networks){_loop(n);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{size:\"large\",shape:\"round\",onClick:function onClick(){setModalUp(\"up\");}},/*#__PURE__*/React.createElement(DollarCircleOutlined,{style:{color:\"#52c41a\"}}),\" \",typeof props.price===\"undefined\"?0:props.price.toFixed(2)),/*#__PURE__*/React.createElement(Modal,{title:\"Buy ETH\",visible:modalUp===\"up\",onCancel:function onCancel(){setModalUp(\"down\");},footer:[/*#__PURE__*/React.createElement(Button,{key:\"back\",onClick:function onClick(){setModalUp(\"down\");}},\"cancel\")]},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{type:type,size:\"large\",shape:\"round\",onClick:function onClick(){window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\"+props.address);}},/*#__PURE__*/React.createElement(\"span\",{style:{paddingRight:15},role:\"img\"},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"flag-us\"},\"\\uD83C\\uDDFA\\uD83C\\uDDF8\")),\"Wyre\")),/*#__PURE__*/React.createElement(\"p\",null,\" \",/*#__PURE__*/React.createElement(Button,{type:type,size:\"large\",shape:\"round\",onClick:function onClick(){new RampInstantSDK({hostAppName:\"scaffold-eth\",hostLogoUrl:\"https://scaffoldeth.io/scaffold-eth.png\",swapAmount:\"100000000000000000\",// 0.1 ETH in wei  ?\nswapAsset:\"ETH\",userAddress:props.address}).on(\"*\",function(event){return console.log(event);}).show();}},/*#__PURE__*/React.createElement(\"span\",{style:{paddingRight:15},role:\"img\"},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"flag-gb\"},\"\\uD83C\\uDDEC\\uD83C\\uDDE7\")),\"Ramp\")),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{type:type,size:\"large\",shape:\"round\",onClick:function onClick(){window.open(\"https://www.coinbase.com/buy-ethereum\");}},/*#__PURE__*/React.createElement(\"span\",{style:{paddingRight:15},role:\"img\",\"aria-label\":\"bank\"},\"\\uD83C\\uDFE6\"),\"Coinbase\")),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(\"h2\",null,\"Testnet ETH\"),allFaucets));}","map":{"version":3,"sources":["C:/Users/hndls/matic-nft-tutorial/packages/react-app/src/components/Ramp.jsx"],"names":["DollarCircleOutlined","RampInstantSDK","Button","Divider","Modal","React","useState","Ramp","props","modalUp","setModalUp","type","allFaucets","n","networks","chainId","push","color","window","open","faucet","name","price","toFixed","address","paddingRight","hostAppName","hostLogoUrl","swapAmount","swapAsset","userAddress","on","event","console","log","show"],"mappings":"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","sourcesContent":["import { DollarCircleOutlined } from \"@ant-design/icons\";\r\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\r\nimport { Button, Divider, Modal } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\n// added display of 0 if price={price} is not provided\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays current ETH price and gives options to buy ETH through Wyre/Ramp/Coinbase\r\n                            or get through Rinkeby/Ropsten/Kovan/Goerli\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Ramp\r\n    price={price}\r\n    address={address}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Ramp opens directly in the application, component uses RampInstantSDK\r\n  - Provide price={price} and current ETH price will be displayed\r\n  - Provide address={address} and your address will be pasted into Wyre/Ramp instantly\r\n*/\r\n\r\nexport default function Ramp(props) {\r\n  const [modalUp, setModalUp] = useState(\"down\");\r\n\r\n  const type = \"default\";\r\n\r\n  const allFaucets = [];\r\n  for (const n in props.networks) {\r\n    if (props.networks[n].chainId !== 31337 && props.networks[n].chainId !== 1) {\r\n      allFaucets.push(\r\n        <p key={props.networks[n].chainId}>\r\n          <Button\r\n            style={{ color: props.networks[n].color }}\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              window.open(props.networks[n].faucet);\r\n            }}\r\n          >\r\n            {props.networks[n].name}\r\n          </Button>\r\n        </p>,\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"large\"\r\n        shape=\"round\"\r\n        onClick={() => {\r\n          setModalUp(\"up\");\r\n        }}\r\n      >\r\n        <DollarCircleOutlined style={{ color: \"#52c41a\" }} />{\" \"}\r\n        {typeof props.price === \"undefined\" ? 0 : props.price.toFixed(2)}\r\n      </Button>\r\n      <Modal\r\n        title=\"Buy ETH\"\r\n        visible={modalUp === \"up\"}\r\n        onCancel={() => {\r\n          setModalUp(\"down\");\r\n        }}\r\n        footer={[\r\n          <Button\r\n            key=\"back\"\r\n            onClick={() => {\r\n              setModalUp(\"down\");\r\n            }}\r\n          >\r\n            cancel\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <Button\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\" + props.address);\r\n            }}\r\n          >\r\n            <span style={{ paddingRight: 15 }} role=\"img\">\r\n              <span role=\"img\" aria-label=\"flag-us\">\r\n                🇺🇸\r\n              </span>\r\n            </span>\r\n            Wyre\r\n          </Button>\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <Button\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              new RampInstantSDK({\r\n                hostAppName: \"scaffold-eth\",\r\n                hostLogoUrl: \"https://scaffoldeth.io/scaffold-eth.png\",\r\n                swapAmount: \"100000000000000000\", // 0.1 ETH in wei  ?\r\n                swapAsset: \"ETH\",\r\n                userAddress: props.address,\r\n              })\r\n                .on(\"*\", event => console.log(event))\r\n                .show();\r\n            }}\r\n          >\r\n            <span style={{ paddingRight: 15 }} role=\"img\">\r\n              <span role=\"img\" aria-label=\"flag-gb\">\r\n                🇬🇧\r\n              </span>\r\n            </span>\r\n            Ramp\r\n          </Button>\r\n        </p>\r\n\r\n        <p>\r\n          <Button\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              window.open(\"https://www.coinbase.com/buy-ethereum\");\r\n            }}\r\n          >\r\n            <span style={{ paddingRight: 15 }} role=\"img\" aria-label=\"bank\">\r\n              🏦\r\n            </span>\r\n            Coinbase\r\n          </Button>\r\n        </p>\r\n\r\n        <Divider />\r\n\r\n        <h2>Testnet ETH</h2>\r\n\r\n        {allFaucets}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}